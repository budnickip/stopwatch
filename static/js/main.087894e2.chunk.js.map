{"version":3,"sources":["components/SettingsComp/index.js","components/Session/index.js","containers/Timer/index.js","containers/StopWatch/index.js","App.js","index.js"],"names":["Settings","props","className","id","class","onClick","breakDecrement","breakLength","breakIncrement","sessionDecrement","sessionLength","sessionIncrement","Session","breakTime","showTime","src","handleStart","onMouseEnter","enterName","onMouseLeave","leaveName","name","reset","Timer","useState","setBreakLength","setSessionLength","timer","setTimer","setBreakTime","start","setStart","setName","hoveredStart","setHoveredStart","useEffect","interval","setInterval","clearInterval","document","getElementById","play","SettingsComp","minutes","Math","floor","seconds","audio","pause","currentTime","StopWatch","App","basename","to","exact","path","ReactDOM","render","StrictMode"],"mappings":"yNAmBeA,MAnBf,SAAkBC,GACd,OACI,sBAAKC,UAAU,WAAf,UACE,sBAAKC,GAAG,cAAcD,UAAU,cAAhC,UACE,mBAAGE,MAAM,yBAAT,0BACA,wBAAQD,GAAG,kBAAkBD,UAAU,MAAMG,QAASJ,EAAMK,eAA5D,eACA,4BAAIL,EAAMM,cACV,wBAAQJ,GAAG,kBAAkBD,UAAU,MAAMG,QAASJ,EAAMO,eAA5D,kBAEF,sBAAKL,GAAG,gBAAgBD,UAAU,gBAAlC,UACE,mBAAGE,MAAM,2BAAT,4BACA,wBAAQF,UAAU,MAAMC,GAAG,oBAAoBE,QAASJ,EAAMQ,iBAA9D,eACA,4BAAIR,EAAMS,gBACV,wBAAQR,UAAU,MAAMC,GAAG,oBAAoBE,QAASJ,EAAMU,iBAA9D,sBCGGC,MAhBf,SAAiBX,GACb,OACI,sBAAKC,UAAU,UAAf,UACI,qBAAKC,GAAG,cAAcD,UAAU,cAAhC,SACA,mBAAGA,UAAU,yBAAb,SAAuCD,EAAMY,UAAY,QAAU,cAEnE,qBAAKV,GAAG,YAAYD,UAAU,YAA9B,SACKD,EAAMa,aAEX,uBAAOX,GAAG,OAAOY,IAAI,8GACrB,mBAAGZ,GAAG,aAAaE,QAASJ,EAAMe,YAAaC,aAAchB,EAAMiB,UAAWC,aAAclB,EAAMmB,UAAWlB,UAAS,eAAUD,EAAMoB,QACtI,mBAAGlB,GAAG,QAAQE,QAASJ,EAAMqB,MAAOlB,MAAM,oCC4HrCmB,MAnIjB,WAAkB,IAAD,EACyBC,mBAAS,GADlC,mBACNjB,EADM,KACOkB,EADP,OAE6BD,mBAAS,IAFtC,mBAENd,EAFM,KAESgB,EAFT,OAGaF,mBAAuB,GAAdd,GAHtB,mBAGNiB,EAHM,KAGCC,EAHD,OAIqBJ,oBAAS,GAJ9B,mBAINX,EAJM,KAIKgB,EAJL,OAKaL,oBAAS,GALtB,mBAKNM,EALM,KAKCC,EALD,OAMWP,mBAASM,EAAQ,sBAAwB,uBANpD,mBAMNT,EANM,KAMAW,EANA,OAO2BR,oBAAS,GAPpC,mBAONS,EAPM,KAOQC,EAPR,KAwHb,OA5DAC,qBAAU,WACNP,EAAuB,GAAdlB,KACV,CAACA,IAUJyB,qBAAU,WACR,GAAGL,EAAM,CACP,IAAMM,EAAWC,aAAY,WAExBV,EAAM,EACPC,GAAS,SAAAD,GAAK,OAAIA,EAAQ,MARhCE,GAAchB,GAgBRyB,cAAcF,MAEf,KACH,OAAO,kBAAME,cAAcF,OAE5B,CAACN,EAAOH,EAAOd,IAElBsB,qBAAU,WAENP,EADCf,EACoB,GAAZN,EAEc,GAAdG,KAEV,CAACG,IAEJsB,qBAAU,WACK,IAAVR,GACWY,SAASC,eAAe,QAC9BC,SAEP,CAACd,IAWJQ,qBAAU,WACOH,EAAfC,EAAuBH,EAAQ,sBAAwB,qBAAgCA,EAAQ,sBAAwB,yBACvH,CAACG,EAAaH,IAGd,sBAAK5B,UAAU,YAAf,UACE,qBAAKA,UAAU,eAAf,SACE,oBAAIA,UAAU,uBAAd,qBAEF,cAACwC,EAAD,CAAcnC,YAAaA,EAAaG,cAAeA,EAAeF,eA1FnD,WAClBD,EAAc,IACfkB,EAAelB,EAAY,IAwF2ED,eAhGnF,WAClBC,EAAc,GACfkB,EAAelB,EAAY,IA8F2GE,iBAnFjH,WACpBC,EAAgB,GACjBgB,EAAiBhB,EAAc,IAiF2IC,iBA5ErJ,WACpBD,EAAgB,IACjBgB,EAAiBhB,EAAc,MA2E/B,cAAC,EAAD,CAASG,UAAWA,EAAWC,SArHlB,WACf,IAAI6B,EAAUC,KAAKC,MAAMlB,EAAM,IAC3BmB,EAAUnB,EAAkB,GAAVgB,EAGtB,OAFAA,EAAUA,EAAU,GAAK,IAAMA,EAAUA,GAExB,KADjBG,EAAUA,EAAU,GAAK,IAAMA,EAAUA,IAiHY9B,YA9DnC,WAClBe,GAAUD,IA6DqEZ,UAlB/D,WAChBgB,GAAgB,IAiBqFd,UAdrF,WAChBc,GAAgB,IAa2Gb,KAAMA,EAAMC,MA7G3H,WACZG,EAAe,GACfC,EAAiB,IACjBE,EAAuB,GAAdlB,GACTqB,GAAS,GACTF,GAAa,GACb,IAAIkB,EAAQR,SAASC,eAAe,QACpCO,EAAMC,QACND,EAAME,YAAc,SCrBXC,MARf,WACI,OACI,qBAAKhD,UAAU,aAAf,uC,eCyCOiD,MAhCf,WACE,OACE,qBAAKjD,UAAU,MAAf,SAII,cAAC,IAAD,CAAQkD,SAAS,aAAjB,SACE,sBAAKlD,UAAU,MAAf,UACA,qBAAIA,UAAU,YAAd,UACE,oBAAIA,UAAU,YAAd,SACE,cAAC,IAAD,CAAMA,UAAU,YAAYmD,GAAG,IAA/B,qBAEF,oBAAInD,UAAU,YAAd,SACE,cAAC,IAAD,CAAMA,UAAU,YAAYmD,GAAG,UAA/B,yBAGJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAO,EAAMC,KAAK,IAAzB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,EAAD,iBC3BdC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnB,SAASC,eAAe,W","file":"static/js/main.087894e2.chunk.js","sourcesContent":["function Settings(props) {\r\n    return(\r\n        <div className=\"settings\">\r\n          <div id=\"break-label\" className=\"break-label\">\r\n            <p class=\"break-label__paragraph\">Break Length</p>\r\n            <button id=\"break-decrement\" className=\"btn\" onClick={props.breakDecrement}>-</button>\r\n            <p>{props.breakLength}</p>\r\n            <button id=\"break-increment\" className=\"btn\" onClick={props.breakIncrement}>+</button>\r\n          </div>\r\n          <div id=\"session-label\" className=\"session-label\">\r\n            <p class=\"session-label__paragraph\">Session Length</p>\r\n            <button className=\"btn\" id=\"session-decrement\" onClick={props.sessionDecrement}>-</button>\r\n            <p>{props.sessionLength}</p>\r\n            <button className=\"btn\" id=\"session-increment\" onClick={props.sessionIncrement}>+</button>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings","function Session(props) {\r\n    return(\r\n        <div className=\"session\">\r\n            <div id=\"timer-label\" className=\"timer-label\">\r\n            <p className=\"timer-label__paragraph\">{props.breakTime ? 'Break' : 'Session'}</p>\r\n            </div>\r\n            <div id=\"time-left\" className=\"time-left\">\r\n                {props.showTime()}\r\n            </div>\r\n            <audio id=\"beep\" src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"/> \r\n            <i id=\"start_stop\" onClick={props.handleStart} onMouseEnter={props.enterName} onMouseLeave={props.leaveName} className={`icon ${props.name}`} />\r\n            <i id=\"reset\" onClick={props.reset} class=\"fas icon reset-icon fa-sync\"></i>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Session","import { useEffect, useState } from 'react';\r\nimport SettingsComp from '../../components/SettingsComp'\r\nimport Session from '../../components/Session'\r\n\r\nfunction Timer() {\r\n    const [breakLength, setBreakLength] = useState(5)\r\n    const [sessionLength, setSessionLength] = useState(25)\r\n    const [timer, setTimer] = useState(sessionLength*60)\r\n    const [breakTime, setBreakTime] = useState(false)\r\n    const [start, setStart] = useState(false)\r\n    const [name, setName] = useState(start ? \"far fa-pause-circle\" : \" far fa-play-circle\")\r\n    const [hoveredStart, setHoveredStart] = useState(false)\r\n  \r\n    const showTime = () =>{\r\n      let minutes = Math.floor(timer/60);\r\n      let seconds = timer - minutes * 60;\r\n      minutes = minutes < 10 ? '0' + minutes : minutes\r\n      seconds = seconds < 10 ? '0' + seconds : seconds\r\n      return minutes + ':' + seconds;\r\n    } \r\n  \r\n    const reset = () =>{\r\n      setBreakLength(5)\r\n      setSessionLength(25)\r\n      setTimer(sessionLength*60)\r\n      setStart(false)\r\n      setBreakTime(false)\r\n      var audio = document.getElementById(\"beep\")\r\n      audio.pause();\r\n      audio.currentTime = 0;\r\n    }\r\n  \r\n  \r\n    const breakDecrement = () =>{\r\n      if(breakLength > 1){\r\n        setBreakLength(breakLength-1)\r\n      }\r\n    }\r\n  \r\n    const breakIncrement = () =>{\r\n      if(breakLength < 60){\r\n        setBreakLength(breakLength+1)\r\n      }\r\n    }\r\n  \r\n  \r\n    const sessionDecrement = () => {\r\n      if(sessionLength > 1){\r\n        setSessionLength(sessionLength-1)\r\n      }\r\n      //setTimer(sessionLength*60)\r\n    }\r\n  \r\n    const sessionIncrement = () =>{\r\n      if(sessionLength < 60){\r\n        setSessionLength(sessionLength+1)\r\n      }\r\n      //setTimer(sessionLength*60) z useState\r\n    }\r\n  \r\n      //useState jest asynchroniczne, dlatego jest konieczność użycia useEffect, w innym przypadku\r\n      //wynik byłby aktualizowany dopiero w kolejnym ruchu!\r\n      // po dodaniu dependency array(drugi argument useEffect), useEffect będzie wywoływane tylko\r\n      // w momencie w którym sessionLength zostanie zaktualizowany!\r\n    useEffect(()=>{\r\n        setTimer(sessionLength*60)\r\n    }, [sessionLength])\r\n  \r\n    const handleStart = () => {\r\n      setStart(!start)\r\n    }\r\n  \r\n    const handleBreak = () =>{\r\n      setBreakTime(!breakTime)\r\n    }\r\n  \r\n    useEffect(() => {\r\n      if(start){\r\n        const interval = setInterval(() => {\r\n         // setTimer(timer => timer - 1);\r\n          if(timer>0){\r\n            setTimer(timer => timer - 1);\r\n          }else{\r\n            handleBreak()\r\n          /*  if(breakTime){\r\n              setTimer(breakLength*60)\r\n            }else{\r\n              setTimer(sessionLength*60)\r\n            } */\r\n            clearInterval(interval)\r\n          }\r\n        }, 1000);\r\n        return () => clearInterval(interval);\r\n      }\r\n    }, [start, timer, breakTime]);\r\n  \r\n    useEffect(()=>{\r\n      if(breakTime){\r\n        setTimer(breakLength*60)\r\n      }else{\r\n        setTimer(sessionLength*60)\r\n      }\r\n    }, [breakTime])\r\n  \r\n    useEffect(()=>{\r\n      if(timer === 0){\r\n        var audio = document.getElementById(\"beep\")\r\n        audio.play()\r\n      }\r\n    }, [timer])\r\n  \r\n  \r\n    const enterName = () =>{\r\n      setHoveredStart(true)\r\n    }\r\n  \r\n    const leaveName = () =>{\r\n      setHoveredStart(false)\r\n    }\r\n  \r\n    useEffect(()=>{\r\n      hoveredStart ? setName(start ? \"fas fa-pause-circle\" : \"fas fa-play-circle\") : setName(start ? \"far fa-pause-circle\" : \" far fa-play-circle\")\r\n    },[hoveredStart,start])\r\n    \r\n    return (\r\n      <div className=\"timer-app\">\r\n        <div className=\"timer-header\">\r\n          <h1 className=\"timer-header__header\">Timer</h1>\r\n        </div>\r\n        <SettingsComp breakLength={breakLength} sessionLength={sessionLength} breakIncrement={breakIncrement} breakDecrement={breakDecrement} sessionDecrement={sessionDecrement} sessionIncrement={sessionIncrement} />\r\n        <Session breakTime={breakTime} showTime={showTime} handleStart={handleStart} enterName={enterName} leaveName={leaveName} name={name} reset={reset}/> \r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Timer;\r\n  ","function StopWatch() {\r\n    return(\r\n        <div className=\"stop-watch\">\r\n            Tutaj będzie stoper\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StopWatch","import './App.scss';\r\nimport React from \"react\"\r\nimport Timer from './containers/Timer'\r\nimport StopWatch from './containers/StopWatch'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      {/*na github pages oraz przy odpalaniu aplikacji domyślną ścieżką jest nazwa folderu stopwatch, czyli\r\n      link/stopwatch - dodając basename stopwatch, jak kliknę na stoper to będzie ścieżka stopwatch/stoper, a jak nie kliknę to otworzy\r\n      się Timer. */}\r\n        <Router basename=\"/stopwatch\">\r\n          <div className=\"nav\">\r\n          <ul className=\"nav__list\">\r\n            <li className=\"nav__item\">\r\n              <Link className=\"nav__link\" to=\"/\">Timer</Link>\r\n            </li>\r\n            <li className=\"nav__item\">\r\n              <Link className=\"nav__link\" to=\"/stoper\">Stoper</Link>\r\n            </li>\r\n          </ul>\r\n          <Switch>\r\n            <Route exact={true} path=\"/\">\r\n              <Timer />\r\n            </Route>\r\n            <Route path=\"/stoper\">\r\n              <StopWatch />\r\n            </Route>\r\n          </Switch>\r\n          </div>\r\n        </Router>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}