{"version":3,"sources":["App.js","index.js"],"names":["App","useState","breakLength","setBreakLength","sessionLength","setSessionLength","timer","setTimer","breakTime","setBreakTime","start","setStart","name","setName","hoveredStart","setHoveredStart","useEffect","interval","setInterval","clearInterval","document","getElementById","play","className","id","class","onClick","minutes","Math","floor","seconds","showTime","src","onMouseEnter","onMouseLeave","audio","pause","currentTime","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.95af8574.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n  const [breakLength, setBreakLength] = useState(5)\r\n  const [sessionLength, setSessionLength] = useState(25)\r\n  const [timer, setTimer] = useState(sessionLength*60)\r\n  const [breakTime, setBreakTime] = useState(false)\r\n  const [start, setStart] = useState(false)\r\n  const [name, setName] = useState(start ? \"far fa-pause-circle\" : \" far fa-play-circle\")\r\n  const [hoveredStart, setHoveredStart] = useState(false)\r\n\r\n  const showTime = () =>{\r\n    let minutes = Math.floor(timer/60);\r\n    let seconds = timer - minutes * 60;\r\n    minutes = minutes < 10 ? '0' + minutes : minutes\r\n    seconds = seconds < 10 ? '0' + seconds : seconds\r\n    return minutes + ':' + seconds;\r\n  } \r\n\r\n  const reset = () =>{\r\n    setBreakLength(5)\r\n    setSessionLength(25)\r\n    setTimer(sessionLength*60)\r\n    setStart(false)\r\n    setBreakTime(false)\r\n    var audio = document.getElementById(\"beep\")\r\n    audio.pause();\r\n    audio.currentTime = 0;\r\n  }\r\n\r\n\r\n  const breakDecrement = () =>{\r\n    if(breakLength > 1){\r\n      setBreakLength(breakLength-1)\r\n    }\r\n  }\r\n\r\n  const breakIncrement = () =>{\r\n    if(breakLength < 60){\r\n      setBreakLength(breakLength+1)\r\n    }\r\n  }\r\n\r\n\r\n  const sessionDecrement = () => {\r\n    if(sessionLength > 1){\r\n      setSessionLength(sessionLength-1)\r\n    }\r\n    //setTimer(sessionLength*60)\r\n  }\r\n\r\n  const sessionIncrement = () =>{\r\n    if(sessionLength < 60){\r\n      setSessionLength(sessionLength+1)\r\n    }\r\n    //setTimer(sessionLength*60) z useState\r\n  }\r\n\r\n    //useState jest asynchroniczne, dlatego jest konieczność użycia useEffect, w innym przypadku\r\n    //wynik byłby aktualizowany dopiero w kolejnym ruchu!\r\n    // po dodaniu dependency array(drugi argument useEffect), useEffect będzie wywoływane tylko\r\n    // w momencie w którym sessionLength zostanie zaktualizowany!\r\n  useEffect(()=>{\r\n      setTimer(sessionLength*60)\r\n  }, [sessionLength])\r\n\r\n  const handleStart = () => {\r\n    setStart(!start)\r\n  }\r\n\r\n  const handleBreak = () =>{\r\n    setBreakTime(!breakTime)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(start){\r\n      const interval = setInterval(() => {\r\n       // setTimer(timer => timer - 1);\r\n        if(timer>0){\r\n          setTimer(timer => timer - 1);\r\n        }else{\r\n          handleBreak()\r\n        /*  if(breakTime){\r\n            setTimer(breakLength*60)\r\n          }else{\r\n            setTimer(sessionLength*60)\r\n          } */\r\n          clearInterval(interval)\r\n        }\r\n      }, 1000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [start, timer, breakTime]);\r\n\r\n  useEffect(()=>{\r\n    if(breakTime){\r\n      setTimer(breakLength*60)\r\n    }else{\r\n      setTimer(sessionLength*60)\r\n    }\r\n  }, [breakTime])\r\n\r\n  useEffect(()=>{\r\n    if(timer === 0){\r\n      var audio = document.getElementById(\"beep\")\r\n      audio.play()\r\n    }\r\n  }, [timer])\r\n\r\n\r\n  const enterName = () =>{\r\n    setHoveredStart(true)\r\n  }\r\n\r\n  const leaveName = () =>{\r\n    setHoveredStart(false)\r\n  }\r\n\r\n  useEffect(()=>{\r\n    hoveredStart ? setName(start ? \"fas fa-pause-circle\" : \"fas fa-play-circle\") : setName(start ? \"far fa-pause-circle\" : \" far fa-play-circle\")\r\n  },[hoveredStart,start])\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"header\">\r\n        <h1 className=\"timer_header\">Timer Wersja zaawansowana</h1>\r\n      </div>\r\n      <div className=\"settings\">\r\n        <div id=\"break-label\" className=\"break-label\">\r\n          <p class=\"break-label__paragraph\">Break Length</p>\r\n          <button id=\"break-decrement\" className=\"btn\" onClick={breakDecrement}>-</button>\r\n          <p id=\"break-length\">{breakLength}</p>\r\n          <button id=\"break-increment\" className=\"btn\" onClick={breakIncrement}>+</button>\r\n        </div>\r\n        <div id=\"session-label\" className=\"session-label\">\r\n          <p class=\"session-label__paragraph\">Session Length</p>\r\n          <button className=\"btn\" id=\"session-decrement\" onClick={sessionDecrement}>-</button>\r\n          <p id=\"session-length\">{sessionLength}</p>\r\n          <button className=\"btn\" id=\"session-increment\" onClick={sessionIncrement}>+</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"timer\">\r\n        <div id=\"timer-label\" className=\"timer-label\">\r\n          <p className=\"timer__paragraph\">{breakTime ? 'Break' : 'Session'}</p>\r\n        </div>\r\n        <div id=\"time-left\" className=\"time-left\">\r\n            {showTime()}\r\n        </div>\r\n        <audio id=\"beep\" src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"/>\r\n     {/*<button id=\"start_stop\" onClick={handleStart}>Start_Stop<i class=\"far fa-play-circle\" /><i class=\"far fa-pause-circle\" /></button> */}   \r\n        <i id=\"start_stop\" onClick={handleStart} onMouseEnter={enterName} onMouseLeave={leaveName} className={`icon ${name}`} />\r\n        <i id=\"reset\" onClick={reset} class=\"fas icon reset-icon fa-sync\"></i>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}